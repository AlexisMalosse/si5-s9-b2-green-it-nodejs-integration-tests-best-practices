# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Read .nvmrc
      run: echo "##[set-output name=NVMRC;]$(cat .nvmrc)"
      id: nvm

    - name: Use Node.js (.nvmrc)
      uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"

    - name: Install Docker Compose
      uses: KengoTODA/actions-setup-docker-compose@v1
      with:
        version: '2.14.2'

    - name: Cache node_modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
  
    - run: npm i
    # - run: echo "test"
    # Run echo modified files
    - run: echo "${{ github.event.pull_request.head }}"
    - run: echo "${{ github.repository }}"
    # Json stringify github.event.commits
    - run: echo "${{ toJson(github.event.commits.*.modified) }}"

  test-jest:
    runs-on: ubuntu-latest
    needs: build
    if: github.event.pull_request.head.repo.full_name == github.repository && contains(github.event.pull_request.head.ref, 'jest') || contains(github.event.commits.*.modified, 'jest/')
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js (.nvmrc)
      uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"

    - name: Use node_modules cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Docker Compose
      uses: KengoTODA/actions-setup-docker-compose@v1
      with:
        version: '2.14.2'

    - run: npm test

  test-nestjs:
    runs-on: ubuntu-latest
    needs: build
    if: github.event.pull_request.head.repo.full_name == github.repository && contains(github.event.pull_request.head.ref, 'nestjs') || contains(github.event.commits.*.modified, 'nestjs/')
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js (.nvmrc)
      uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"

    - name: Use node_modules cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Docker Compose
      uses: KengoTODA/actions-setup-docker-compose@v1
      with:
        version: '2.14.2'

    - run: npm run test:nestjs

  test-mocha:
    runs-on: ubuntu-latest
    needs: build
    if: github.event.pull_request.head.repo.full_name == github.repository && contains(github.event.pull_request.head.ref, 'mocha') || contains(github.event.commits.*.modified, 'mocha/')
    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js (.nvmrc)
      uses: actions/setup-node@v2
      with:
        node-version: "${{ steps.nvm.outputs.NVMRC }}"

    - name: Use node_modules cache
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - run: npm run test:mocha
